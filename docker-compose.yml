version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:14-alpine
    container_name: gazprombank_postgres
    environment:
      POSTGRES_DB: gazprombank_reviews
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gazprombank_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d gazprombank_reviews"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: gazprombank_backend
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gazprombank_reviews
    volumes:
      - ./data:/app/data:ro       # данные для ETL
      - ./models:/app/models:ro   # веса моделей
    ports:
      - "8000:8000"
    networks:
      - gazprombank_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://backend:8000/api/v1
    container_name: gazprombank_frontend
    env_file:
      - ./frontend/.env.docker
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8000/api/v1
    ports:
      - "3000:3000"
    networks:
      - gazprombank_network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  # ETL сервис (запускается один раз для загрузки данных)
  etl:
    build:
      context: .                
      dockerfile: backend/Dockerfile
    container_name: gazprombank_etl
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gazprombank_reviews
    volumes:
      - ./data:/app/data:ro
    networks:
      - gazprombank_network
    depends_on:
      postgres:
        condition: service_healthy
    command: ["python", "run_etl.py", "--data-path", "/app/data/raw"]
    restart: "no"

volumes:
  postgres_data:
    driver: local

networks:
  gazprombank_network:
    driver: bridge
