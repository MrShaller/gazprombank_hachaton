#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import re
from datetime import datetime
from pathlib import Path

def russian_month_to_number(month_name):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –≤ –Ω–æ–º–µ—Ä"""
    months = {
        '—è–Ω–≤–∞—Ä—è': '01', '—Ñ–µ–≤—Ä–∞–ª—è': '02', '–º–∞—Ä—Ç–∞': '03', '–∞–ø—Ä–µ–ª—è': '04',
        '–º–∞—è': '05', '–∏—é–Ω—è': '06', '–∏—é–ª—è': '07', '–∞–≤–≥—É—Å—Ç–∞': '08',
        '—Å–µ–Ω—Ç—è–±—Ä—è': '09', '–æ–∫—Ç—è–±—Ä—è': '10', '–Ω–æ—è–±—Ä—è': '11', '–¥–µ–∫–∞–±—Ä—è': '12'
    }
    return months.get(month_name.lower(), '01')

def fix_date_format(date_str):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã —Å '–¥–µ–Ω—å –º–µ—Å—è—Ü' –Ω–∞ 'YYYY-MM-DD'"""
    if not date_str or date_str == 'N/A':
        return date_str
    
    # –ï—Å–ª–∏ –¥–∞—Ç–∞ —É–∂–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
    if re.match(r'^\d{4}-\d{2}-\d{2}$', date_str):
        return date_str
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç "–¥–µ–Ω—å –º–µ—Å—è—Ü" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "5 —Å–µ–Ω—Ç—è–±—Ä—è", "26 –∞–≤–≥—É—Å—Ç–∞")
    pattern = r'^(\d{1,2})\s+(\w+)$'
    match = re.match(pattern, date_str.strip())
    
    if match:
        day = match.group(1).zfill(2)
        month_name = match.group(2)
        month = russian_month_to_number(month_name)
        year = '2025'  # –¢–µ–∫—É—â–∏–π –≥–æ–¥ –¥–ª—è –¥–∞—Ç –±–µ–∑ –≥–æ–¥–∞
        
        return f"{year}-{month}-{day}"
    
    return date_str

def merge_json_files():
    """–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ JSON —Ñ–∞–π–ª—ã –≤ –æ–¥–∏–Ω —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ ID –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏"""
    
    data_dir = Path("data/raw/sravni_ru")
    output_file = data_dir / "sravni_ru.json"
    
    all_reviews = []
    current_id = 1
    files_processed = 0
    total_reviews = 0
    dates_fixed = 0
    
    print("üîÑ –û–ë–™–ï–î–ò–ù–ï–ù–ò–ï –§–ê–ô–õ–û–í –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–ê–¢")
    print("=" * 50)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
    for json_file in sorted(data_dir.glob("*.json")):
        if json_file.name == "sravni_ru.json":
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
            
        print(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {json_file.name}")
        
        try:
            with open(json_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            file_reviews = 0
            file_dates_fixed = 0
            
            for review in data:
                # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
                review['review_id'] = str(current_id)
                current_id += 1
                
                # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
                if 'review_date' in review:
                    original_date = review['review_date']
                    fixed_date = fix_date_format(original_date)
                    
                    if original_date != fixed_date:
                        review['review_date'] = fixed_date
                        file_dates_fixed += 1
                
                all_reviews.append(review)
                file_reviews += 1
            
            print(f"   ‚úÖ {file_reviews} –æ—Ç–∑—ã–≤–æ–≤, {file_dates_fixed} –¥–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
            files_processed += 1
            total_reviews += file_reviews
            dates_fixed += file_dates_fixed
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª...")
    
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(all_reviews, f, ensure_ascii=False, indent=2)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("=" * 50)
    print(f"üìÅ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {files_processed}")
    print(f"üìù –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: {total_reviews}")
    print(f"üîÑ ID –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–æ: {total_reviews}")
    print(f"üìÖ –î–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {dates_fixed}")
    print(f"üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {output_file.stat().st_size / (1024*1024):.2f} MB")
    print(f"üìç –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_file}")
    
    return total_reviews, dates_fixed

if __name__ == "__main__":
    merge_json_files()
